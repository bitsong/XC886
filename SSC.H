//****************************************************************************
// @Module        High Speed Synchronous Serial Interface(SSC)
// @Filename      SSC.H
// @Project       ssc.dav
//----------------------------------------------------------------------------
// @Controller    Infineon XC886CLM-8FF
//
// @Compiler      Keil
//
// @Codegenerator 1.3
//
// @Description:  This file contains all function prototypes and macros for 
//                the SSC module.
//
//----------------------------------------------------------------------------
// @Date          2015/9/2 12:35:12
//
//****************************************************************************

// USER CODE BEGIN (SSC_Header,1)

// USER CODE END



#ifndef _SSC_H_
#define _SSC_H_

//****************************************************************************
// @Project Includes
//****************************************************************************

// USER CODE BEGIN (SSC_Header,2)

// USER CODE END


//****************************************************************************
// @Macros
//****************************************************************************

// USER CODE BEGIN (SSC_Header,3)

// USER CODE END


//****************************************************************************
// @Defines
//****************************************************************************

// USER CODE BEGIN (SSC_Header,4)

// USER CODE END


//****************************************************************************
// @Typedefs
//****************************************************************************

// USER CODE BEGIN (SSC_Header,5)

// USER CODE END


//****************************************************************************
// @Imported Global Variables
//****************************************************************************

// USER CODE BEGIN (SSC_Header,6)

// USER CODE END


//****************************************************************************
// @Global Variables
//****************************************************************************

// USER CODE BEGIN (SSC_Header,7)

// USER CODE END


//****************************************************************************
// @Prototypes Of Global Functions
//****************************************************************************

void SSC_vInit(void);
void SSC_vSendData(ubyte Data);
ubyte SSC_vGetData(void);
ubyte SSC_ubError(void);


// USER CODE BEGIN (SSC_Header,8)

// USER CODE END


//****************************************************************************
// @Macro         SSC_ubProgrammingMode() 
//
//----------------------------------------------------------------------------
// @Description   This macro sets the Programming Mode.
//
//----------------------------------------------------------------------------
// @Returnvalue   None
//
//----------------------------------------------------------------------------
// @Parameters    None
//
//----------------------------------------------------------------------------
// @Date          2015/9/2
//
//****************************************************************************

#define SSC_ubProgrammingMode() SSC_CONH_P &= ~(ubyte)0x80


//****************************************************************************
// @Macro         SSC_ubOperatingMode() 
//
//----------------------------------------------------------------------------
// @Description   This macro sets the OperatingMode.
//
//----------------------------------------------------------------------------
// @Returnvalue   None
//
//----------------------------------------------------------------------------
// @Parameters    None
//
//----------------------------------------------------------------------------
// @Date          2015/9/2
//
//****************************************************************************

#define SSC_ubOperatingMode() SSC_CONH_O |= 0x80


//****************************************************************************
// @Macro         SSC_ubBusy() 
//
//----------------------------------------------------------------------------
// @Description   This macro may be used for checking the status of the busy 
//                flag. When a transfer starts, the busy flag is set. At the 
//                end of a transfer (SSC_TB is empty) the busy flag is 
//                cleared.
//
//----------------------------------------------------------------------------
// @Returnvalue   Returns a 1 if SSC is busy, else 0
//
//----------------------------------------------------------------------------
// @Parameters    None
//
//----------------------------------------------------------------------------
// @Date          2015/9/2
//
//****************************************************************************

#define SSC_ubBusy() (SSC_CONH_O & 0x10)


//****************************************************************************
// @Macro         SSC_ubSetLoopBackMode() 
//
//----------------------------------------------------------------------------
// @Description   This macro sets the loop back mode of SSC. In this mode the 
//                receive input is connected with transmit output 
//                (half-duplex mode). To be reset this mode call the macro 
//                SSC_ubResetLoopBackMode.NOTE: To set LoopBack mode user has 
//                to switch to operating mode.
//
//----------------------------------------------------------------------------
// @Returnvalue   None
//
//----------------------------------------------------------------------------
// @Parameters    None
//
//----------------------------------------------------------------------------
// @Date          2015/9/2
//
//****************************************************************************

#define SSC_ubSetLoopBackMode() SSC_CONL_P |= 0x80


//****************************************************************************
// @Macro         SSC_ubResetLoopBackMode() 
//
//----------------------------------------------------------------------------
// @Description   This macro resets the loop back mode of SSC. To be set the 
//                loop back mode call the macro SSC_ubSetLoopBackMode.NOTE: 
//                To reset LoopBack mode user has to switch to operating mode.
//
//----------------------------------------------------------------------------
// @Returnvalue   None
//
//----------------------------------------------------------------------------
// @Parameters    None
//
//----------------------------------------------------------------------------
// @Date          2015/9/2
//
//****************************************************************************

#define SSC_ubResetLoopBackMode() SSC_CONL_P &= ~(ubyte)0x80


//****************************************************************************
// @Interrupt Vectors
//****************************************************************************


// USER CODE BEGIN (SSC_Header,9)

// USER CODE END


#endif  // ifndef _SSC_H_
